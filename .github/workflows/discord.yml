name: Uptime Monitor

on:
  schedule:
    - cron: "*/5 * * * *" # cek tiap 5 menit
  workflow_dispatch:

jobs:
  monitor:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install axios

      - name: Check multiple URLs
        id: check
        run: |
          echo "üîç Checking websites..."
          node <<'EOF'
          const axios = require("axios");

          const urls = [
            { name: "CG", url: process.env.SECRET_API_URL },
            { name: "Wikipedia", url: "https://en.wikipedia.org" },
            { name: "Hacker News", url: "https://news.ycombinator.com" },
            { name: "Test Broken Site", url: "https://thissitedoesnotexist.koj.co" }
          ];

          let downSites = [];

          (async () => {
            for (const site of urls) {
              try {
                const res = await axios.get(site.url, { timeout: 10000 });
                if (res.status >= 200 && res.status < 400) {
                  console.log(`‚úÖ ${site.name} (${site.url}) is UP`);
                } else {
                  console.log(`üö® ${site.name} (${site.url}) is DOWN (status ${res.status})`);
                  downSites.push(`${site.name} (${site.url})`);
                }
              } catch (err) {
                console.log(`üö® ${site.name} (${site.url}) is DOWN (${err.message})`);
                downSites.push(`${site.name} (${site.url})`);
              }
            }

            if (downSites.length > 0) {
              console.log("::set-output name=status::down");
              console.log("::set-output name=downSites::" + downSites.join(", "));
            }
          })();
          EOF
        env:
          SECRET_API_URL: ${{ secrets.SECRET_API_URL }}

      - name: Notify if down
        if: steps.check.outputs.status == 'down'
        run: |
          curl -H "Content-Type: application/json" \
            -d "{\"content\":\"üö® Website DOWN: ${{ steps.check.outputs.downSites }}\"}" \
            ${{ secrets.DISCORD_WEBHOOK_URL }}
